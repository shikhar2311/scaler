{"ast":null,"code":"var _jsxFileName = \"/Users/shikharrajput/Desktop/scaler/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [urlInput, setUrlInput] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!urlInput.trim() || !textInput.trim()) return;\n\n    // Create the user's message\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      url: urlInput,\n      text: textInput,\n      timestamp: new Date()\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n\n    // Simulate a GPT response after a short delay\n    setTimeout(() => {\n      const gptResponse = {\n        id: Date.now() + 1,\n        sender: 'gpt',\n        text: 'Hint: Try breaking the problem into smaller parts. What data structures might help optimize your solution?',\n        timestamp: new Date()\n      };\n      setMessages(prevMessages => [...prevMessages, gptResponse]);\n    }, 1500);\n\n    // Reset the input fields\n    setUrlInput('');\n    setTextInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GPT Teaching Assistant Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"url\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Problem URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 36\n            }, this), \" \", message.url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), message.sender === 'gpt' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter LeetCode URL\",\n        value: urlInput,\n        onChange: e => setUrlInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your question or doubt\",\n        value: textInput,\n        onChange: e => setTextInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rZ3poR2Bbh02DbenWVih+yoWfU4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","urlInput","setUrlInput","textInput","setTextInput","handleSubmit","event","preventDefault","trim","userMessage","id","Date","now","sender","url","text","timestamp","prevMessages","setTimeout","gptResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","onSubmit","type","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/shikharrajput/Desktop/scaler/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [urlInput, setUrlInput] = useState('');\n  const [textInput, setTextInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!urlInput.trim() || !textInput.trim()) return;\n\n    // Create the user's message\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      url: urlInput,\n      text: textInput,\n      timestamp: new Date(),\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n\n    // Simulate a GPT response after a short delay\n    setTimeout(() => {\n      const gptResponse = {\n        id: Date.now() + 1,\n        sender: 'gpt',\n        text: 'Hint: Try breaking the problem into smaller parts. What data structures might help optimize your solution?',\n        timestamp: new Date(),\n      };\n      setMessages(prevMessages => [...prevMessages, gptResponse]);\n    }, 1500);\n\n    // Reset the input fields\n    setUrlInput('');\n    setTextInput('');\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>GPT Teaching Assistant Chat</h1>\n      </header>\n      <div className=\"chat-window\">\n        {messages.map(message => (\n          <div key={message.id} className={`message ${message.sender}`}>\n            {message.sender === 'user' && (\n              <div>\n                <p className=\"url\"><strong>Problem URL:</strong> {message.url}</p>\n                <p className=\"text\">{message.text}</p>\n              </div>\n            )}\n            {message.sender === 'gpt' && (\n              <p className=\"text\">{message.text}</p>\n            )}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"chat-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter LeetCode URL\"\n          value={urlInput}\n          onChange={(e) => setUrlInput(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Enter your question or doubt\"\n          value={textInput}\n          onChange={(e) => setTextInput(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}