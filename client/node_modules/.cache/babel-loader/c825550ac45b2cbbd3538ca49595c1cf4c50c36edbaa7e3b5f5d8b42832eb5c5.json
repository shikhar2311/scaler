{"ast":null,"code":"var _jsxFileName = \"/Users/shikharrajput/Desktop/scaler/client/src/App.js\",\n  _s = $RefreshSig$();\nimport EmptyChatState from './EmptyChatState'; // Import the new component\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\n\n// Dummy list of users for the sidebar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyUsers = [{\n  id: 1,\n  name: 'Alice',\n  avatar: '👩‍💼'\n}, {\n  id: 2,\n  name: 'Bob',\n  avatar: '👨‍💻'\n}, {\n  id: 3,\n  name: 'Charlie',\n  avatar: '🧑‍🎨'\n}, {\n  id: 4,\n  name: 'Diana',\n  avatar: '👩‍🔬'\n}, {\n  id: 5,\n  name: 'Ethan',\n  avatar: '👨‍🚀'\n}];\nfunction App() {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(dummyUsers[0]);\n  const [messages, setMessages] = useState([]);\n  const [textInput, setTextInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [problemData, setProblemData] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Switch active user\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setMessages([]); // clear messages when switching users\n    setProblemData(null); // clear problem data\n  };\n\n  // Auto-scroll to the bottom of the chat\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // Format timestamps\n  const formatTime = () => {\n    const now = new Date();\n    return now.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Check if input is a LeetCode URL\n  const isLeetCodeUrl = text => {\n    return text.trim().match(/^https?:\\/\\/(www\\.)?leetcode\\.com\\/problems\\/[a-zA-Z0-9-]+\\/?$/i);\n  };\n\n  // Extract problem slug from URL\n  const extractProblemSlug = url => {\n    const match = url.match(/problems\\/([a-zA-Z0-9-]+)/i);\n    return match ? match[1] : null;\n  };\n\n  // Fetch problem details from LeetCode\n  const fetchProblemDetails = async url => {\n    const slug = extractProblemSlug(url);\n    if (!slug) return null;\n    setIsLoading(true);\n    try {\n      // This would be replaced with your actual API endpoint for fetching problem details\n      const response = await fetch(`http://localhost:8000/api/leetcode/problem/${slug}`);\n      const data = await response.json();\n      if (data.success) {\n        return data.problem;\n      }\n      return null;\n    } catch (err) {\n      console.error('Error fetching problem details:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle both regular text input and LeetCode URL\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!textInput.trim()) return;\n    const userInputText = textInput.trim();\n    setTextInput('');\n\n    // Add user message to the local state\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: userInputText,\n      time: formatTime()\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setIsLoading(true);\n\n    // Check if the input is a LeetCode URL\n    if (isLeetCodeUrl(userInputText) && !problemData) {\n      // Fetch problem details\n      const problem = await fetchProblemDetails(userInputText);\n      if (problem) {\n        setProblemData(problem);\n\n        // Add system message about detected problem\n        const systemMessage = {\n          id: Date.now() + 1,\n          sender: 'system',\n          text: `I've loaded the LeetCode problem \"${problem.title}\". What specific part are you stuck on?`,\n          time: formatTime()\n        };\n        setMessages(prev => [...prev, systemMessage]);\n        setIsLoading(false);\n        return;\n      } else {\n        // Failed to fetch problem\n        const errorMessage = {\n          id: Date.now() + 1,\n          sender: 'system',\n          text: `I couldn't load the problem from that URL. Please check the link or describe the problem manually.`,\n          time: formatTime()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsLoading(false);\n        return;\n      }\n    }\n\n    // Convert messages to ChatGPT's required format\n    const conversation = updatedMessages.map(msg => ({\n      role: msg.sender === 'user' ? 'user' : 'assistant',\n      content: msg.text\n    }));\n\n    // Add problem context if available\n    let apiBody = {\n      messages: conversation\n    };\n    if (problemData) {\n      apiBody.problemContext = problemData;\n    }\n\n    // Call the backend to get AI response\n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(apiBody)\n      });\n      const data = await response.json();\n\n      // Extract AI response from the data\n      const aiText = data.choices[0].message.content;\n      const aiMessage = {\n        id: Date.now() + 1,\n        sender: 'assistant',\n        text: aiText,\n        time: formatTime()\n      };\n\n      // Update messages with AI response\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (err) {\n      console.error('Error:', err);\n      // Add error message to chat\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        sender: 'system',\n        text: 'Sorry, there was an error connecting to the AI. Please try again.',\n        time: formatTime()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Display problem details if loaded\n  const renderProblemContext = () => {\n    if (!problemData) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-context\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: problemData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `difficulty ${problemData.difficulty.toLowerCase()}`,\n          children: problemData.difficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-tags\",\n        children: problemData.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"problem-tag\",\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LeetCode Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle\",\n        onClick: toggleDarkMode,\n        children: darkMode ? '☀️' : '🌙'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list\",\n          children: dummyUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `user-item ${selectedUser.id === user.id ? 'active' : ''}`,\n            onClick: () => handleUserSelect(user),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: user.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-name\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-user\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-avatar\",\n              children: selectedUser.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Chat with \", selectedUser.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), renderProblemContext(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-window\",\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyChatState, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-wrapper ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.sender}`,\n              children: [message.sender === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: selectedUser.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this), message.sender === 'system' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-text\",\n                  children: message.sender === 'assistant' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                    children: message.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 5\n                  }, this) : message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  children: message.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-wrapper assistant\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message assistant\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSend,\n          className: \"chat-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: problemData ? `Ask about \"${problemData.title}\"...` : \"Enter a LeetCode URL or ask a question...\",\n            value: textInput,\n            onChange: e => setTextInput(e.target.value),\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !textInput.trim() || isLoading,\n            className: isLoading ? 'loading' : '',\n            children: isLoading ? '...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"snJs58co4gwdyr6AAYxrz+GLJcQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["EmptyChatState","React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","dummyUsers","id","name","avatar","App","_s","selectedUser","setSelectedUser","messages","setMessages","textInput","setTextInput","isLoading","setIsLoading","darkMode","setDarkMode","problemData","setProblemData","messagesEndRef","handleUserSelect","user","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleDarkMode","document","body","classList","toggle","formatTime","now","Date","toLocaleTimeString","hour","minute","isLeetCodeUrl","text","trim","match","extractProblemSlug","url","fetchProblemDetails","slug","response","fetch","data","json","success","problem","err","console","error","handleSend","e","preventDefault","userInputText","userMessage","sender","time","updatedMessages","systemMessage","title","prev","errorMessage","conversation","map","msg","role","content","apiBody","problemContext","method","headers","JSON","stringify","aiText","choices","message","aiMessage","renderProblemContext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","difficulty","toLowerCase","tags","tag","index","onClick","length","ref","onSubmit","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/shikharrajput/Desktop/scaler/client/src/App.js"],"sourcesContent":["\nimport EmptyChatState from './EmptyChatState'; // Import the new component\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\n\n// Dummy list of users for the sidebar\nconst dummyUsers = [\n  { id: 1, name: 'Alice', avatar: '👩‍💼' },\n  { id: 2, name: 'Bob', avatar: '👨‍💻' },\n  { id: 3, name: 'Charlie', avatar: '🧑‍🎨' },\n  { id: 4, name: 'Diana', avatar: '👩‍🔬' },\n  { id: 5, name: 'Ethan', avatar: '👨‍🚀' },\n];\n\nfunction App() {\n  const [selectedUser, setSelectedUser] = useState(dummyUsers[0]);\n  const [messages, setMessages] = useState([]);\n  const [textInput, setTextInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [problemData, setProblemData] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Switch active user\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n    setMessages([]); // clear messages when switching users\n    setProblemData(null); // clear problem data\n  };\n\n  // Auto-scroll to the bottom of the chat\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // Format timestamps\n  const formatTime = () => {\n    const now = new Date();\n    return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // Check if input is a LeetCode URL\n  const isLeetCodeUrl = (text) => {\n    return text.trim().match(/^https?:\\/\\/(www\\.)?leetcode\\.com\\/problems\\/[a-zA-Z0-9-]+\\/?$/i);\n  };\n\n  // Extract problem slug from URL\n  const extractProblemSlug = (url) => {\n    const match = url.match(/problems\\/([a-zA-Z0-9-]+)/i);\n    return match ? match[1] : null;\n  };\n\n  // Fetch problem details from LeetCode\n  const fetchProblemDetails = async (url) => {\n    const slug = extractProblemSlug(url);\n    if (!slug) return null;\n\n    setIsLoading(true);\n    try {\n      // This would be replaced with your actual API endpoint for fetching problem details\n      const response = await fetch(`http://localhost:8000/api/leetcode/problem/${slug}`);\n      const data = await response.json();\n      \n      if (data.success) {\n        return data.problem;\n      }\n      return null;\n    } catch (err) {\n      console.error('Error fetching problem details:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle both regular text input and LeetCode URL\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!textInput.trim()) return;\n\n    const userInputText = textInput.trim();\n    setTextInput('');\n\n    // Add user message to the local state\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: userInputText,\n      time: formatTime(),\n    };\n    \n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setIsLoading(true);\n\n    // Check if the input is a LeetCode URL\n    if (isLeetCodeUrl(userInputText) && !problemData) {\n      // Fetch problem details\n      const problem = await fetchProblemDetails(userInputText);\n      \n      if (problem) {\n        setProblemData(problem);\n        \n        // Add system message about detected problem\n        const systemMessage = {\n          id: Date.now() + 1,\n          sender: 'system',\n          text: `I've loaded the LeetCode problem \"${problem.title}\". What specific part are you stuck on?`,\n          time: formatTime(),\n        };\n        \n        setMessages(prev => [...prev, systemMessage]);\n        setIsLoading(false);\n        return;\n      } else {\n        // Failed to fetch problem\n        const errorMessage = {\n          id: Date.now() + 1,\n          sender: 'system',\n          text: `I couldn't load the problem from that URL. Please check the link or describe the problem manually.`,\n          time: formatTime(),\n        };\n        \n        setMessages(prev => [...prev, errorMessage]);\n        setIsLoading(false);\n        return;\n      }\n    }\n\n    // Convert messages to ChatGPT's required format\n    const conversation = updatedMessages.map((msg) => ({\n      role: msg.sender === 'user' ? 'user' : 'assistant',\n      content: msg.text,\n    }));\n\n    // Add problem context if available\n    let apiBody = { messages: conversation };\n    if (problemData) {\n      apiBody.problemContext = problemData;\n    }\n\n    // Call the backend to get AI response\n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(apiBody),\n      });\n      \n      const data = await response.json();\n      \n      // Extract AI response from the data\n      const aiText = data.choices[0].message.content;\n      const aiMessage = {\n        id: Date.now() + 1,\n        sender: 'assistant',\n        text: aiText,\n        time: formatTime(),\n      };\n      \n      // Update messages with AI response\n      setMessages((prev) => [...prev, aiMessage]);\n    } catch (err) {\n      console.error('Error:', err);\n      // Add error message to chat\n      setMessages((prev) => [\n        ...prev,\n        {\n          id: Date.now() + 1,\n          sender: 'system',\n          text: 'Sorry, there was an error connecting to the AI. Please try again.',\n          time: formatTime(),\n        },\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Display problem details if loaded\n  const renderProblemContext = () => {\n    if (!problemData) return null;\n    \n    return (\n      <div className=\"problem-context\">\n        <div className=\"problem-header\">\n          <h3>{problemData.title}</h3>\n          <span className={`difficulty ${problemData.difficulty.toLowerCase()}`}>\n            {problemData.difficulty}\n          </span>\n        </div>\n        <div className=\"problem-tags\">\n          {problemData.tags.map((tag, index) => (\n            <span key={index} className=\"problem-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={`app-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"app-header\">\n        <h1>LeetCode Assistant</h1>\n        <button className=\"theme-toggle\" onClick={toggleDarkMode}>\n          {darkMode ? '☀️' : '🌙'}\n        </button>\n      </div>\n      \n      <div className=\"main-container\">\n        <div className=\"sidebar\">\n          <div className=\"sidebar-header\">\n            <h3>Contacts</h3>\n          </div>\n          <div className=\"users-list\">\n            {dummyUsers.map((user) => (\n              <div\n                key={user.id}\n                className={`user-item ${selectedUser.id === user.id ? 'active' : ''}`}\n                onClick={() => handleUserSelect(user)}\n              >\n                <div className=\"user-avatar\">{user.avatar}</div>\n                <div className=\"user-name\">{user.name}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"chat-container\">\n          <div className=\"chat-header\">\n            <div className=\"chat-header-user\">\n              <span className=\"user-avatar\">{selectedUser.avatar}</span>\n              <h2>Chat with {selectedUser.name}</h2>\n            </div>\n          </div>\n          \n          {renderProblemContext()}\n          \n          <div className=\"chat-window\">\n            {messages.length === 0 ? (\n              <EmptyChatState />\n            ) : (\n              messages.map((message) => (\n                <div \n                  key={message.id} \n                  className={`message-wrapper ${message.sender}`}\n                >\n                  <div className={`message ${message.sender}`}>\n                    {message.sender === 'assistant' && (\n                      <div className=\"message-avatar\">🤖</div>\n                    )}\n                    {message.sender === 'user' && (\n                      <div className=\"message-avatar\">{selectedUser.avatar}</div>\n                    )}\n                    {message.sender === 'system' && (\n                      <div className=\"message-avatar\">ℹ️</div>\n                    )}\n                    <div className=\"message-content\">\n                    <div className=\"message-text\">\n  {message.sender === 'assistant' ? (\n    <ReactMarkdown>{message.text}</ReactMarkdown>\n  ) : (\n    message.text\n  )}\n</div>\n                      <div className=\"message-time\">{message.time}</div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {isLoading && (\n              <div className=\"message-wrapper assistant\">\n                <div className=\"message assistant\">\n                  <div className=\"message-avatar\">🤖</div>\n                  <div className=\"message-content\">\n                    <div className=\"typing-indicator\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n          \n          <form onSubmit={handleSend} className=\"chat-form\">\n            <input\n              type=\"text\"\n              placeholder={problemData \n                ? `Ask about \"${problemData.title}\"...` \n                : \"Enter a LeetCode URL or ask a question...\"}\n              value={textInput}\n              onChange={(e) => setTextInput(e.target.value)}\n              disabled={isLoading}\n            />\n            <button \n              type=\"submit\" \n              disabled={!textInput.trim() || isLoading}\n              className={isLoading ? 'loading' : ''}\n            >\n              {isLoading ? '...' : 'Send'}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}