{"ast":null,"code":"var _jsxFileName = \"/Users/shikharrajput/Desktop/scaler/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\n// Dummy list of users for the sidebar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyUsers = [{\n  id: 1,\n  name: 'Alice',\n  avatar: '👩‍💼'\n}, {\n  id: 2,\n  name: 'Bob',\n  avatar: '👨‍💻'\n}, {\n  id: 3,\n  name: 'Charlie',\n  avatar: '🧑‍🎨'\n}, {\n  id: 4,\n  name: 'Diana',\n  avatar: '👩‍🔬'\n}, {\n  id: 5,\n  name: 'Ethan',\n  avatar: '👨‍🚀'\n}];\nfunction App() {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(dummyUsers[0]);\n  const [messages, setMessages] = useState([]);\n  const [textInput, setTextInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Switch active user\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setMessages([]); // clear messages when switching users\n  };\n\n  // Auto-scroll to the bottom of the chat\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // Format timestamps\n  const formatTime = () => {\n    const now = new Date();\n    return now.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Send a message and get AI response\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!textInput.trim()) return;\n\n    // Add user message to the local state\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: textInput,\n      time: formatTime()\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setTextInput('');\n    setIsLoading(true);\n\n    // Convert messages to ChatGPT's required format\n    const conversation = updatedMessages.map(msg => ({\n      role: msg.sender === 'user' ? 'user' : 'assistant',\n      content: msg.text\n    }));\n\n    // Call the backend to get AI response\n    try {\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: conversation\n        })\n      });\n      const data = await response.json();\n\n      // Extract AI response from the data\n      const aiText = data.choices[0].message.content;\n      const aiMessage = {\n        id: Date.now() + 1,\n        sender: 'assistant',\n        text: aiText,\n        time: formatTime()\n      };\n\n      // Update messages with AI response\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (err) {\n      console.error('Error:', err);\n      // Add error message to chat\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        sender: 'system',\n        text: 'Sorry, there was an error connecting to the AI. Please try again.',\n        time: formatTime()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle\",\n        onClick: toggleDarkMode,\n        children: darkMode ? '☀️' : '🌙'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list\",\n          children: dummyUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `user-item ${selectedUser.id === user.id ? 'active' : ''}`,\n            onClick: () => handleUserSelect(user),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: user.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-name\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-user\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-avatar\",\n              children: selectedUser.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Chat with \", selectedUser.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-window\",\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-chat\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No messages yet. Start a conversation!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-wrapper ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.sender}`,\n              children: [message.sender === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: selectedUser.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-text\",\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  children: message.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-wrapper assistant\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message assistant\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSend,\n          className: \"chat-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Message ${selectedUser.name}...`,\n            value: textInput,\n            onChange: e => setTextInput(e.target.value),\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !textInput.trim() || isLoading,\n            className: isLoading ? 'loading' : '',\n            children: isLoading ? '...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oFBv4eEEmG/S0GzGBWlAEOCwoAU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","dummyUsers","id","name","avatar","App","_s","selectedUser","setSelectedUser","messages","setMessages","textInput","setTextInput","isLoading","setIsLoading","darkMode","setDarkMode","messagesEndRef","handleUserSelect","user","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleDarkMode","document","body","classList","toggle","formatTime","now","Date","toLocaleTimeString","hour","minute","handleSend","e","preventDefault","trim","userMessage","sender","text","time","updatedMessages","conversation","map","msg","role","content","response","fetch","method","headers","JSON","stringify","data","json","aiText","choices","message","aiMessage","prev","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","ref","onSubmit","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/shikharrajput/Desktop/scaler/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\n// Dummy list of users for the sidebar\nconst dummyUsers = [\n  { id: 1, name: 'Alice', avatar: '👩‍💼' },\n  { id: 2, name: 'Bob', avatar: '👨‍💻' },\n  { id: 3, name: 'Charlie', avatar: '🧑‍🎨' },\n  { id: 4, name: 'Diana', avatar: '👩‍🔬' },\n  { id: 5, name: 'Ethan', avatar: '👨‍🚀' },\n];\n\nfunction App() {\n  const [selectedUser, setSelectedUser] = useState(dummyUsers[0]);\n  const [messages, setMessages] = useState([]);\n  const [textInput, setTextInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Switch active user\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n    setMessages([]); // clear messages when switching users\n  };\n\n  // Auto-scroll to the bottom of the chat\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // Format timestamps\n  const formatTime = () => {\n    const now = new Date();\n    return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // Send a message and get AI response\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!textInput.trim()) return;\n\n    // Add user message to the local state\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: textInput,\n      time: formatTime(),\n    };\n    \n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setTextInput('');\n    setIsLoading(true);\n\n    // Convert messages to ChatGPT's required format\n    const conversation = updatedMessages.map((msg) => ({\n      role: msg.sender === 'user' ? 'user' : 'assistant',\n      content: msg.text,\n    }));\n\n    // Call the backend to get AI response\n    try {\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ messages: conversation }),\n      });\n      \n      const data = await response.json();\n      \n      // Extract AI response from the data\n      const aiText = data.choices[0].message.content;\n      const aiMessage = {\n        id: Date.now() + 1,\n        sender: 'assistant',\n        text: aiText,\n        time: formatTime(),\n      };\n      \n      // Update messages with AI response\n      setMessages((prev) => [...prev, aiMessage]);\n    } catch (err) {\n      console.error('Error:', err);\n      // Add error message to chat\n      setMessages((prev) => [\n        ...prev,\n        {\n          id: Date.now() + 1,\n          sender: 'system',\n          text: 'Sorry, there was an error connecting to the AI. Please try again.',\n          time: formatTime(),\n        },\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className={`app-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"app-header\">\n        <h1>AI Chat App</h1>\n        <button className=\"theme-toggle\" onClick={toggleDarkMode}>\n          {darkMode ? '☀️' : '🌙'}\n        </button>\n      </div>\n      \n      <div className=\"main-container\">\n        <div className=\"sidebar\">\n          <div className=\"sidebar-header\">\n            <h3>Contacts</h3>\n          </div>\n          <div className=\"users-list\">\n            {dummyUsers.map((user) => (\n              <div\n                key={user.id}\n                className={`user-item ${selectedUser.id === user.id ? 'active' : ''}`}\n                onClick={() => handleUserSelect(user)}\n              >\n                <div className=\"user-avatar\">{user.avatar}</div>\n                <div className=\"user-name\">{user.name}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"chat-container\">\n          <div className=\"chat-header\">\n            <div className=\"chat-header-user\">\n              <span className=\"user-avatar\">{selectedUser.avatar}</span>\n              <h2>Chat with {selectedUser.name}</h2>\n            </div>\n          </div>\n          \n          <div className=\"chat-window\">\n            {messages.length === 0 ? (\n              <div className=\"empty-chat\">\n                <p>No messages yet. Start a conversation!</p>\n              </div>\n            ) : (\n              messages.map((message) => (\n                <div \n                  key={message.id} \n                  className={`message-wrapper ${message.sender}`}\n                >\n                  <div className={`message ${message.sender}`}>\n                    {message.sender === 'assistant' && (\n                      <div className=\"message-avatar\">🤖</div>\n                    )}\n                    {message.sender === 'user' && (\n                      <div className=\"message-avatar\">{selectedUser.avatar}</div>\n                    )}\n                    <div className=\"message-content\">\n                      <div className=\"message-text\">{message.text}</div>\n                      <div className=\"message-time\">{message.time}</div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {isLoading && (\n              <div className=\"message-wrapper assistant\">\n                <div className=\"message assistant\">\n                  <div className=\"message-avatar\">🤖</div>\n                  <div className=\"message-content\">\n                    <div className=\"typing-indicator\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n          \n          <form onSubmit={handleSend} className=\"chat-form\">\n            <input\n              type=\"text\"\n              placeholder={`Message ${selectedUser.name}...`}\n              value={textInput}\n              onChange={(e) => setTextInput(e.target.value)}\n              disabled={isLoading}\n            />\n            <button \n              type=\"submit\" \n              disabled={!textInput.trim() || isLoading}\n              className={isLoading ? 'loading' : ''}\n            >\n              {isLoading ? '...' : 'Send'}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}